"""Initial migration with User, Test, Question, TestAttempt, and ProgressMetrics models

Revision ID: e7e5775393e6
Revises: 
Create Date: 2025-08-17 21:46:20.817714

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e7e5775393e6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company', sa.String(length=100), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('pattern_data', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tests', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tests_company'), ['company'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('branch', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('progress_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject_area', sa.String(length=50), nullable=False),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('total_attempts', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'subject_area', name='unique_user_subject')
    )
    with op.batch_alter_table('progress_metrics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_progress_metrics_user_id'), ['user_id'], unique=False)

    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('section', sa.String(length=50), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('options', sa.JSON(), nullable=False),
    sa.Column('correct_answer', sa.String(length=10), nullable=False),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=True),
    sa.Column('topic', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_questions_test_id'), ['test_id'], unique=False)

    op.create_table('test_attempts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('total_questions', sa.Integer(), nullable=False),
    sa.Column('time_taken', sa.Integer(), nullable=True),
    sa.Column('answers', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['tests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('test_attempts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_test_attempts_test_id'), ['test_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_test_attempts_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('test_attempts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_test_attempts_user_id'))
        batch_op.drop_index(batch_op.f('ix_test_attempts_test_id'))

    op.drop_table('test_attempts')
    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_questions_test_id'))

    op.drop_table('questions')
    with op.batch_alter_table('progress_metrics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_progress_metrics_user_id'))

    op.drop_table('progress_metrics')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('tests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tests_company'))

    op.drop_table('tests')
    # ### end Alembic commands ###
